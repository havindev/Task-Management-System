{"ast":null,"code":"import React,{createContext,useContext,useState,useEffect}from'react';import{jsx as _jsx}from\"react/jsx-runtime\";const ThemeContext=/*#__PURE__*/createContext();export const ThemeProvider=_ref=>{let{children}=_ref;const[theme,setTheme]=useState(()=>{const saved=localStorage.getItem('taskapp_theme');return saved||'light';});useEffect(()=>{document.documentElement.setAttribute('data-theme',theme);localStorage.setItem('taskapp_theme',theme);},[theme]);const toggleTheme=()=>{setTheme(prevTheme=>prevTheme==='light'?'dark':'light');};const setSpecificTheme=themeName=>{setTheme(themeName);};const value={theme,toggleTheme,setSpecificTheme,isDark:theme==='dark'};return/*#__PURE__*/_jsx(ThemeContext.Provider,{value:value,children:children});};export const useTheme=()=>{const context=useContext(ThemeContext);if(!context){throw new Error('useTheme must be used within a ThemeProvider');}return context;};export default ThemeContext;","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","jsx","_jsx","ThemeContext","ThemeProvider","_ref","children","theme","setTheme","saved","localStorage","getItem","document","documentElement","setAttribute","setItem","toggleTheme","prevTheme","setSpecificTheme","themeName","value","isDark","Provider","useTheme","context","Error"],"sources":["/Users/havin/Desktop/Learning/Lap Trinh/ReactJs/task-manager/frontend/src/contexts/ThemeContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\n\nconst ThemeContext = createContext();\n\nexport const ThemeProvider = ({ children }) => {\n\n  const [theme, setTheme] = useState(() => {\n    const saved = localStorage.getItem('taskapp_theme');\n    return saved || 'light';\n  });\n\n\n  useEffect(() => {\n    document.documentElement.setAttribute('data-theme', theme);\n    localStorage.setItem('taskapp_theme', theme);\n  }, [theme]);\n\n\n  const toggleTheme = () => {\n    setTheme(prevTheme => (prevTheme === 'light' ? 'dark' : 'light'));\n  };\n\n\n  const setSpecificTheme = (themeName) => {\n    setTheme(themeName);\n  };\n\n  const value = {\n    theme,\n    toggleTheme,\n    setSpecificTheme,\n    isDark: theme === 'dark'\n  };\n\n  return (\n    <ThemeContext.Provider value={value}>\n      {children}\n    </ThemeContext.Provider>\n  );\n};\n\n\nexport const useTheme = () => {\n  const context = useContext(ThemeContext);\n  if(!context) {\n    throw new Error('useTheme must be used within a ThemeProvider');\n  }\n  return context;\n};\n\nexport default ThemeContext;\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,aAAa,CAAEC,UAAU,CAAEC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAE9E,KAAM,CAAAC,YAAY,cAAGN,aAAa,CAAC,CAAC,CAEpC,MAAO,MAAM,CAAAO,aAAa,CAAGC,IAAA,EAAkB,IAAjB,CAAEC,QAAS,CAAC,CAAAD,IAAA,CAExC,KAAM,CAACE,KAAK,CAAEC,QAAQ,CAAC,CAAGT,QAAQ,CAAC,IAAM,CACvC,KAAM,CAAAU,KAAK,CAAGC,YAAY,CAACC,OAAO,CAAC,eAAe,CAAC,CACnD,MAAO,CAAAF,KAAK,EAAI,OAAO,CACzB,CAAC,CAAC,CAGFT,SAAS,CAAC,IAAM,CACdY,QAAQ,CAACC,eAAe,CAACC,YAAY,CAAC,YAAY,CAAEP,KAAK,CAAC,CAC1DG,YAAY,CAACK,OAAO,CAAC,eAAe,CAAER,KAAK,CAAC,CAC9C,CAAC,CAAE,CAACA,KAAK,CAAC,CAAC,CAGX,KAAM,CAAAS,WAAW,CAAGA,CAAA,GAAM,CACxBR,QAAQ,CAACS,SAAS,EAAKA,SAAS,GAAK,OAAO,CAAG,MAAM,CAAG,OAAQ,CAAC,CACnE,CAAC,CAGD,KAAM,CAAAC,gBAAgB,CAAIC,SAAS,EAAK,CACtCX,QAAQ,CAACW,SAAS,CAAC,CACrB,CAAC,CAED,KAAM,CAAAC,KAAK,CAAG,CACZb,KAAK,CACLS,WAAW,CACXE,gBAAgB,CAChBG,MAAM,CAAEd,KAAK,GAAK,MACpB,CAAC,CAED,mBACEL,IAAA,CAACC,YAAY,CAACmB,QAAQ,EAACF,KAAK,CAAEA,KAAM,CAAAd,QAAA,CACjCA,QAAQ,CACY,CAAC,CAE5B,CAAC,CAGD,MAAO,MAAM,CAAAiB,QAAQ,CAAGA,CAAA,GAAM,CAC5B,KAAM,CAAAC,OAAO,CAAG1B,UAAU,CAACK,YAAY,CAAC,CACxC,GAAG,CAACqB,OAAO,CAAE,CACX,KAAM,IAAI,CAAAC,KAAK,CAAC,8CAA8C,CAAC,CACjE,CACA,MAAO,CAAAD,OAAO,CAChB,CAAC,CAED,cAAe,CAAArB,YAAY","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}