{"ast":null,"code":"import _objectSpread from\"/Users/havin/Desktop/Learning/Lap Trinh/ReactJs/task-manager/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";// API base URL - will be the same domain when deployed to Vercel\nconst API_BASE=process.env.NODE_ENV==='production'?''// Same domain in production\n:'http://localhost:3000';// Local development\nexport const vercelAPI={// Auth endpoints\nlogin:async credentials=>{const response=await fetch(\"\".concat(API_BASE,\"/api/auth/login\"),{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify(credentials)});if(!response.ok){const error=await response.json();throw new Error(error.error||'Login failed');}return response.json();},logout:async()=>{const response=await fetch(\"\".concat(API_BASE,\"/api/auth/logout\"),{method:'POST',headers:{'Content-Type':'application/json'}});return response.json();},verifySession:async userId=>{const response=await fetch(\"\".concat(API_BASE,\"/api/auth/verify?userId=\").concat(userId),{method:'GET',headers:{'Content-Type':'application/json'}});const result=await response.json();return result.valid;},// Task endpoints\ngetAllTasks:async userId=>{const response=await fetch(\"\".concat(API_BASE,\"/api/tasks?userId=\").concat(userId),{method:'GET',headers:{'Content-Type':'application/json'}});if(!response.ok){throw new Error('Failed to fetch tasks');}return response.json();},createTask:async(taskData,userId)=>{const response=await fetch(\"\".concat(API_BASE,\"/api/tasks\"),{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify(_objectSpread(_objectSpread({},taskData),{},{userId}))});if(!response.ok){const error=await response.json();throw new Error(error.error||'Failed to create task');}return response.json();},updateTask:async(taskId,taskData)=>{const response=await fetch(\"\".concat(API_BASE,\"/api/tasks?taskId=\").concat(taskId),{method:'PUT',headers:{'Content-Type':'application/json'},body:JSON.stringify(taskData)});if(!response.ok){const error=await response.json();throw new Error(error.error||'Failed to update task');}return response.json();},deleteTask:async taskId=>{const response=await fetch(\"\".concat(API_BASE,\"/api/tasks?taskId=\").concat(taskId),{method:'DELETE',headers:{'Content-Type':'application/json'}});if(!response.ok){const error=await response.json();throw new Error(error.error||'Failed to delete task');}return response.json();}};export default vercelAPI;","map":{"version":3,"names":["API_BASE","process","env","NODE_ENV","vercelAPI","login","credentials","response","fetch","concat","method","headers","body","JSON","stringify","ok","error","json","Error","logout","verifySession","userId","result","valid","getAllTasks","createTask","taskData","_objectSpread","updateTask","taskId","deleteTask"],"sources":["/Users/havin/Desktop/Learning/Lap Trinh/ReactJs/task-manager/frontend/src/api/vercelAPI.js"],"sourcesContent":["// API base URL - will be the same domain when deployed to Vercel\nconst API_BASE = process.env.NODE_ENV === 'production' \n  ? '' // Same domain in production\n  : 'http://localhost:3000'; // Local development\n\nexport const vercelAPI = {\n  // Auth endpoints\n  login: async (credentials) => {\n    const response = await fetch(`${API_BASE}/api/auth/login`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(credentials),\n    });\n\n    if (!response.ok) {\n      const error = await response.json();\n      throw new Error(error.error || 'Login failed');\n    }\n\n    return response.json();\n  },\n\n  logout: async () => {\n    const response = await fetch(`${API_BASE}/api/auth/logout`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    });\n\n    return response.json();\n  },\n\n  verifySession: async (userId) => {\n    const response = await fetch(`${API_BASE}/api/auth/verify?userId=${userId}`, {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    });\n\n    const result = await response.json();\n    return result.valid;\n  },\n\n  // Task endpoints\n  getAllTasks: async (userId) => {\n    const response = await fetch(`${API_BASE}/api/tasks?userId=${userId}`, {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    });\n\n    if (!response.ok) {\n      throw new Error('Failed to fetch tasks');\n    }\n\n    return response.json();\n  },\n\n  createTask: async (taskData, userId) => {\n    const response = await fetch(`${API_BASE}/api/tasks`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({ ...taskData, userId }),\n    });\n\n    if (!response.ok) {\n      const error = await response.json();\n      throw new Error(error.error || 'Failed to create task');\n    }\n\n    return response.json();\n  },\n\n  updateTask: async (taskId, taskData) => {\n    const response = await fetch(`${API_BASE}/api/tasks?taskId=${taskId}`, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(taskData),\n    });\n\n    if (!response.ok) {\n      const error = await response.json();\n      throw new Error(error.error || 'Failed to update task');\n    }\n\n    return response.json();\n  },\n\n  deleteTask: async (taskId) => {\n    const response = await fetch(`${API_BASE}/api/tasks?taskId=${taskId}`, {\n      method: 'DELETE',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    });\n\n    if (!response.ok) {\n      const error = await response.json();\n      throw new Error(error.error || 'Failed to delete task');\n    }\n\n    return response.json();\n  },\n};\n\nexport default vercelAPI;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}