{"ast":null,"code":"import React from'react';import TaskItem from'./TaskItem';import LoadingSpinner from'../Common/LoadingSpinner';import ErrorMessage from'../Common/ErrorMessage';import'../../style/TaskList.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";export default function TaskList(_ref){let{tasks=[],isLoading=false,error=null,onEditTask,onDeleteTask,onRetryLoad,searchTerm=''}=_ref;const highlightText=(text,searchTerm)=>{if(!searchTerm||!text)return text;const regex=new RegExp(\"(\".concat(searchTerm,\")\"),'gi');const parts=text.split(regex);return parts.map((part,index)=>{if(part.toLowerCase()===searchTerm.toLowerCase()){return/*#__PURE__*/_jsx(\"span\",{className:\"search-highlight\",children:part},index);}return part;});};const handleRetryLoad=()=>{if(onRetryLoad){onRetryLoad();}};if(isLoading){return/*#__PURE__*/_jsx(\"div\",{className:\"task-list-container\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"task-list-loading\",children:[/*#__PURE__*/_jsx(LoadingSpinner,{size:\"large\"}),/*#__PURE__*/_jsx(\"p\",{className:\"loading-text\",children:\"\\u0110ang t\\u1EA3i danh s\\xE1ch tasks...\"})]})});}if(error){return/*#__PURE__*/_jsx(\"div\",{className:\"task-list-container\",children:/*#__PURE__*/_jsx(ErrorMessage,{message:error,onRetry:onRetryLoad?handleRetryLoad:undefined,onDismiss:()=>{}})});}if(!tasks||tasks.length===0){return/*#__PURE__*/_jsx(\"div\",{className:\"task-list-container\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"task-list-empty\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"empty-icon\",children:\"\\uD83D\\uDD0D\"}),/*#__PURE__*/_jsx(\"h3\",{className:\"empty-title\",children:searchTerm?'Kh√¥ng t√¨m th·∫•y k·∫øt qu·∫£':'Ch∆∞a c√≥ task n√†o'}),/*#__PURE__*/_jsx(\"p\",{className:\"empty-description\",children:searchTerm?\"Kh\\xF4ng c\\xF3 task n\\xE0o ph\\xF9 h\\u1EE3p v\\u1EDBi \\\"\".concat(searchTerm,\"\\\". Th\\u1EED t\\xECm ki\\u1EBFm v\\u1EDBi t\\u1EEB kh\\xF3a kh\\xE1c.\"):'B·∫Øt ƒë·∫ßu t·∫°o task ƒë·∫ßu ti√™n ƒë·ªÉ qu·∫£n l√Ω c√¥ng vi·ªác c·ªßa b·∫°n!'})]})});}return/*#__PURE__*/_jsx(\"div\",{className:\"task-list-container\",children:/*#__PURE__*/_jsx(\"div\",{className:\"task-list-content\",children:/*#__PURE__*/_jsx(\"div\",{className:\"task-grid\",children:tasks.map(task=>/*#__PURE__*/_jsx(TaskItem,{task:task,onEdit:onEditTask,onDelete:onDeleteTask,highlightText:highlightText,searchTerm:searchTerm},task.id))})})});}","map":{"version":3,"names":["React","TaskItem","LoadingSpinner","ErrorMessage","jsx","_jsx","jsxs","_jsxs","TaskList","_ref","tasks","isLoading","error","onEditTask","onDeleteTask","onRetryLoad","searchTerm","highlightText","text","regex","RegExp","concat","parts","split","map","part","index","toLowerCase","className","children","handleRetryLoad","size","message","onRetry","undefined","onDismiss","length","task","onEdit","onDelete","id"],"sources":["/Users/havin/Desktop/Learning/Lap Trinh/ReactJs/task-manager/frontend/src/components/Tasks/TaskList.jsx"],"sourcesContent":["import React from 'react';\nimport TaskItem from './TaskItem';\nimport LoadingSpinner from '../Common/LoadingSpinner';\nimport ErrorMessage from '../Common/ErrorMessage';\nimport '../../style/TaskList.css';\n\nexport default function TaskList({\n  tasks = [],\n  isLoading = false,\n  error = null,\n  onEditTask,\n  onDeleteTask,\n  onRetryLoad,\n  searchTerm = '',\n}) {\n\n  const highlightText = (text, searchTerm) => {\n    if (!searchTerm || !text) return text;\n\n    const regex = new RegExp(`(${searchTerm})`, 'gi');\n    const parts = text.split(regex);\n\n    return parts.map((part, index) => {\n      if (part.toLowerCase() === searchTerm.toLowerCase()) {\n        return (\n          <span key={index} className=\"search-highlight\">\n            {part}\n          </span>\n        );\n      }\n      return part;\n    });\n  };\n\n  const handleRetryLoad = () => {\n    if (onRetryLoad) {\n      onRetryLoad();\n    }\n  };\n\n\n  if (isLoading) {\n    return (\n      <div className=\"task-list-container\">\n        <div className=\"task-list-loading\">\n          <LoadingSpinner size=\"large\" />\n          <p className=\"loading-text\">ƒêang t·∫£i danh s√°ch tasks...</p>\n        </div>\n      </div>\n    );\n  }\n\n\n  if (error) {\n    return (\n      <div className=\"task-list-container\">\n        <ErrorMessage\n          message={error}\n          onRetry={onRetryLoad ? handleRetryLoad : undefined}\n          onDismiss={() => {}}\n        />\n      </div>\n    );\n  }\n\n  if (!tasks || tasks.length === 0) {\n    return (\n      <div className=\"task-list-container\">\n        <div className=\"task-list-empty\">\n          <div className=\"empty-icon\">üîç</div>\n          <h3 className=\"empty-title\">\n            {searchTerm ? 'Kh√¥ng t√¨m th·∫•y k·∫øt qu·∫£' : 'Ch∆∞a c√≥ task n√†o'}\n          </h3>\n          <p className=\"empty-description\">\n            {searchTerm\n              ? `Kh√¥ng c√≥ task n√†o ph√π h·ª£p v·ªõi \"${searchTerm}\". Th·ª≠ t√¨m ki·∫øm v·ªõi t·ª´ kh√≥a kh√°c.`\n              : 'B·∫Øt ƒë·∫ßu t·∫°o task ƒë·∫ßu ti√™n ƒë·ªÉ qu·∫£n l√Ω c√¥ng vi·ªác c·ªßa b·∫°n!'\n            }\n          </p>\n        </div>\n      </div>\n    );\n  }\n\n\n\n  return (\n    <div className=\"task-list-container\">\n      <div className=\"task-list-content\">\n        <div className=\"task-grid\">\n          {tasks.map(task => (\n            <TaskItem\n              key={task.id}\n              task={task}\n              onEdit={onEditTask}\n              onDelete={onDeleteTask}\n              highlightText={highlightText}\n              searchTerm={searchTerm}\n            />\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n}\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CACzB,MAAO,CAAAC,QAAQ,KAAM,YAAY,CACjC,MAAO,CAAAC,cAAc,KAAM,0BAA0B,CACrD,MAAO,CAAAC,YAAY,KAAM,wBAAwB,CACjD,MAAO,0BAA0B,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAElC,cAAe,SAAS,CAAAC,QAAQA,CAAAC,IAAA,CAQ7B,IAR8B,CAC/BC,KAAK,CAAG,EAAE,CACVC,SAAS,CAAG,KAAK,CACjBC,KAAK,CAAG,IAAI,CACZC,UAAU,CACVC,YAAY,CACZC,WAAW,CACXC,UAAU,CAAG,EACf,CAAC,CAAAP,IAAA,CAEC,KAAM,CAAAQ,aAAa,CAAGA,CAACC,IAAI,CAAEF,UAAU,GAAK,CAC1C,GAAI,CAACA,UAAU,EAAI,CAACE,IAAI,CAAE,MAAO,CAAAA,IAAI,CAErC,KAAM,CAAAC,KAAK,CAAG,GAAI,CAAAC,MAAM,KAAAC,MAAA,CAAKL,UAAU,MAAK,IAAI,CAAC,CACjD,KAAM,CAAAM,KAAK,CAAGJ,IAAI,CAACK,KAAK,CAACJ,KAAK,CAAC,CAE/B,MAAO,CAAAG,KAAK,CAACE,GAAG,CAAC,CAACC,IAAI,CAAEC,KAAK,GAAK,CAChC,GAAID,IAAI,CAACE,WAAW,CAAC,CAAC,GAAKX,UAAU,CAACW,WAAW,CAAC,CAAC,CAAE,CACnD,mBACEtB,IAAA,SAAkBuB,SAAS,CAAC,kBAAkB,CAAAC,QAAA,CAC3CJ,IAAI,EADIC,KAEL,CAAC,CAEX,CACA,MAAO,CAAAD,IAAI,CACb,CAAC,CAAC,CACJ,CAAC,CAED,KAAM,CAAAK,eAAe,CAAGA,CAAA,GAAM,CAC5B,GAAIf,WAAW,CAAE,CACfA,WAAW,CAAC,CAAC,CACf,CACF,CAAC,CAGD,GAAIJ,SAAS,CAAE,CACb,mBACEN,IAAA,QAAKuB,SAAS,CAAC,qBAAqB,CAAAC,QAAA,cAClCtB,KAAA,QAAKqB,SAAS,CAAC,mBAAmB,CAAAC,QAAA,eAChCxB,IAAA,CAACH,cAAc,EAAC6B,IAAI,CAAC,OAAO,CAAE,CAAC,cAC/B1B,IAAA,MAAGuB,SAAS,CAAC,cAAc,CAAAC,QAAA,CAAC,0CAA2B,CAAG,CAAC,EACxD,CAAC,CACH,CAAC,CAEV,CAGA,GAAIjB,KAAK,CAAE,CACT,mBACEP,IAAA,QAAKuB,SAAS,CAAC,qBAAqB,CAAAC,QAAA,cAClCxB,IAAA,CAACF,YAAY,EACX6B,OAAO,CAAEpB,KAAM,CACfqB,OAAO,CAAElB,WAAW,CAAGe,eAAe,CAAGI,SAAU,CACnDC,SAAS,CAAEA,CAAA,GAAM,CAAC,CAAE,CACrB,CAAC,CACC,CAAC,CAEV,CAEA,GAAI,CAACzB,KAAK,EAAIA,KAAK,CAAC0B,MAAM,GAAK,CAAC,CAAE,CAChC,mBACE/B,IAAA,QAAKuB,SAAS,CAAC,qBAAqB,CAAAC,QAAA,cAClCtB,KAAA,QAAKqB,SAAS,CAAC,iBAAiB,CAAAC,QAAA,eAC9BxB,IAAA,QAAKuB,SAAS,CAAC,YAAY,CAAAC,QAAA,CAAC,cAAE,CAAK,CAAC,cACpCxB,IAAA,OAAIuB,SAAS,CAAC,aAAa,CAAAC,QAAA,CACxBb,UAAU,CAAG,wBAAwB,CAAG,kBAAkB,CACzD,CAAC,cACLX,IAAA,MAAGuB,SAAS,CAAC,mBAAmB,CAAAC,QAAA,CAC7Bb,UAAU,0DAAAK,MAAA,CAC2BL,UAAU,oEAC5C,yDAAyD,CAE5D,CAAC,EACD,CAAC,CACH,CAAC,CAEV,CAIA,mBACEX,IAAA,QAAKuB,SAAS,CAAC,qBAAqB,CAAAC,QAAA,cAClCxB,IAAA,QAAKuB,SAAS,CAAC,mBAAmB,CAAAC,QAAA,cAChCxB,IAAA,QAAKuB,SAAS,CAAC,WAAW,CAAAC,QAAA,CACvBnB,KAAK,CAACc,GAAG,CAACa,IAAI,eACbhC,IAAA,CAACJ,QAAQ,EAEPoC,IAAI,CAAEA,IAAK,CACXC,MAAM,CAAEzB,UAAW,CACnB0B,QAAQ,CAAEzB,YAAa,CACvBG,aAAa,CAAEA,aAAc,CAC7BD,UAAU,CAAEA,UAAW,EALlBqB,IAAI,CAACG,EAMX,CACF,CAAC,CACC,CAAC,CACH,CAAC,CACH,CAAC,CAEV","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}